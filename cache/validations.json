{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:24",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)557_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)547_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)547_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)547_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)676_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)740_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:16",
        "version": {
          "withMetadata": "9f238e3f03b11714ce701fa7083391084548184cc65479b2620430631424e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin/contracts/utils/Panic.sol:26",
        "version": {
          "withMetadata": "5d6470be24221fe4f6ff6cc4bf57a6592879560c97ae57443faf4957c5fc9641",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:13",
        "version": {
          "withMetadata": "da3d60c1e26e3fee1a19864ff256f7065159fe161bfe346968c58ec7d096002d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:12",
        "version": {
          "withMetadata": "b3c18ed86839214afed7f068f81424edfcf2a5fd8583ddd6ab03ea973bbaba7c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "2372ecf7fe33ce370ae8228606096145b1a3e80a84242e53e470d3420a7466e9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:11",
        "version": {
          "withMetadata": "2026ace53092d425f1e39f7c344bee02f3f64517bdedbb0dfd9e19fc27268f50",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:ICreatorToken": {
        "src": "contracts/base/BaseERC721_updated.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:ITransferValidator": {
        "src": "contracts/base/BaseERC721_updated.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:TCG_World_Plots_Updated": {
        "src": "contracts/base/BaseERC721_updated.sol:34",
        "version": {
          "withMetadata": "e1d07d49cee01140b03e431235c43e40b8f66d8c55390b5d7491b3cd22073646",
          "withoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8",
          "linkedWithoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8"
        },
        "inherit": [
          "contracts/base/BaseERC721_updated.sol:ICreatorToken",
          "contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:66"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:69"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:72"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:75"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:78"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:81"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:84"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)557_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)547_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)2551_storage": {
              "label": "struct TCG_World_Plots_Updated.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)2560_storage": {
              "label": "struct TCG_World_Plots_Updated.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)676_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)740_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)547_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "TCG_World_Plots_Updated",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "contracts/base/BaseERC721_updated.sol:48",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "TCG_World_Plots_Updated",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "contracts/base/BaseERC721_updated.sol:49",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "TCG_World_Plots_Updated",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "contracts/base/BaseERC721_updated.sol:51",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "TCG_World_Plots_Updated",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "contracts/base/BaseERC721_updated.sol:52",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "TCG_World_Plots_Updated",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "contracts/base/BaseERC721_updated.sol:58",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)547_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/events/BaseERC721Events.sol:BaseERC721Events": {
        "src": "contracts/base/events/BaseERC721Events.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:24",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)557_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)547_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)547_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)547_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)676_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)740_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:16",
        "version": {
          "withMetadata": "9f238e3f03b11714ce701fa7083391084548184cc65479b2620430631424e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin/contracts/utils/Panic.sol:26",
        "version": {
          "withMetadata": "5d6470be24221fe4f6ff6cc4bf57a6592879560c97ae57443faf4957c5fc9641",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:13",
        "version": {
          "withMetadata": "da3d60c1e26e3fee1a19864ff256f7065159fe161bfe346968c58ec7d096002d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:12",
        "version": {
          "withMetadata": "b3c18ed86839214afed7f068f81424edfcf2a5fd8583ddd6ab03ea973bbaba7c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "2372ecf7fe33ce370ae8228606096145b1a3e80a84242e53e470d3420a7466e9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:11",
        "version": {
          "withMetadata": "2026ace53092d425f1e39f7c344bee02f3f64517bdedbb0dfd9e19fc27268f50",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:ICreatorToken": {
        "src": "contracts/base/BaseERC721_updated.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:ITransferValidator": {
        "src": "contracts/base/BaseERC721_updated.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:TCG_World_Plots_Updated": {
        "src": "contracts/base/BaseERC721_updated.sol:34",
        "version": {
          "withMetadata": "7918106c829de8ffd80ee9de3f20cbcc20882781ded43cc5d81d94d7974f7d05",
          "withoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8",
          "linkedWithoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8"
        },
        "inherit": [
          "contracts/base/BaseERC721_updated.sol:ICreatorToken",
          "contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:57"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:60"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:63"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:66"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:69"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:72"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:75"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:78"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)557_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)547_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)2536_storage": {
              "label": "struct TCG_World_Plots_Updated.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_dummy",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)2543_storage": {
              "label": "struct TCG_World_Plots_Updated.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_dummy",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)676_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)740_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)547_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "TCG_World_Plots_Updated",
                "label": "_dummy",
                "type": "t_uint256",
                "src": "contracts/base/BaseERC721_updated.sol:47",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "TCG_World_Plots_Updated",
                "label": "_dummy",
                "type": "t_uint256",
                "src": "contracts/base/BaseERC721_updated.sol:50",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)547_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/events/BaseERC721Events.sol:BaseERC721Events": {
        "src": "contracts/base/events/BaseERC721Events.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:24",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)557_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)547_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)547_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)547_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)676_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)740_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:16",
        "version": {
          "withMetadata": "9f238e3f03b11714ce701fa7083391084548184cc65479b2620430631424e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin/contracts/utils/Panic.sol:26",
        "version": {
          "withMetadata": "5d6470be24221fe4f6ff6cc4bf57a6592879560c97ae57443faf4957c5fc9641",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:13",
        "version": {
          "withMetadata": "da3d60c1e26e3fee1a19864ff256f7065159fe161bfe346968c58ec7d096002d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:12",
        "version": {
          "withMetadata": "b3c18ed86839214afed7f068f81424edfcf2a5fd8583ddd6ab03ea973bbaba7c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "2372ecf7fe33ce370ae8228606096145b1a3e80a84242e53e470d3420a7466e9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:11",
        "version": {
          "withMetadata": "2026ace53092d425f1e39f7c344bee02f3f64517bdedbb0dfd9e19fc27268f50",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:ICreatorToken": {
        "src": "contracts/base/BaseERC721_updated.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:ITransferValidator": {
        "src": "contracts/base/BaseERC721_updated.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:TCG_World_Plots_Updated": {
        "src": "contracts/base/BaseERC721_updated.sol:34",
        "version": {
          "withMetadata": "f8b4cf818cc9cda336cc4832ea03e2274843a5eade2ba3bdd42eedd586727ea6",
          "withoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8",
          "linkedWithoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8"
        },
        "inherit": [
          "contracts/base/BaseERC721_updated.sol:ICreatorToken",
          "contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:51"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:54"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:57"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:60"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:63"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:66"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:69"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "TCG_World_Plots_Updated",
              "src": "contracts/base/BaseERC721_updated.sol:72"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)557_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)547_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)676_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)740_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)547_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)547_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)547_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/events/BaseERC721Events.sol:BaseERC721Events": {
        "src": "contracts/base/events/BaseERC721Events.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:24",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin/contracts/interfaces/IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:16",
        "version": {
          "withMetadata": "9f238e3f03b11714ce701fa7083391084548184cc65479b2620430631424e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin/contracts/utils/Panic.sol:26",
        "version": {
          "withMetadata": "5d6470be24221fe4f6ff6cc4bf57a6592879560c97ae57443faf4957c5fc9641",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:13",
        "version": {
          "withMetadata": "da3d60c1e26e3fee1a19864ff256f7065159fe161bfe346968c58ec7d096002d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:12",
        "version": {
          "withMetadata": "b3c18ed86839214afed7f068f81424edfcf2a5fd8583ddd6ab03ea973bbaba7c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "2372ecf7fe33ce370ae8228606096145b1a3e80a84242e53e470d3420a7466e9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:11",
        "version": {
          "withMetadata": "2026ace53092d425f1e39f7c344bee02f3f64517bdedbb0dfd9e19fc27268f50",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721.sol:BaseERC721": {
        "src": "contracts/base/BaseERC721.sol:34",
        "version": {
          "withMetadata": "6df5ba8f6692b1e272778fdec3334df1223986211ff8829ffc4f549aef1ad184",
          "withoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4",
          "linkedWithoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4"
        },
        "inherit": [
          "contracts/base/BaseERC721.sol:ICreatorToken",
          "contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:52"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:55"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:58"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:61"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:64"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:67"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:70"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721.sol:ICreatorToken": {
        "src": "contracts/base/BaseERC721.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721.sol:ITransferValidator": {
        "src": "contracts/base/BaseERC721.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:BaseERC721": {
        "src": "contracts/base/BaseERC721_updated.sol:34",
        "version": {
          "withMetadata": "1825a5f2989ebe3ccc4150c6ba23ee81c032f55b581f4c64f2089aa2fe5c9744",
          "withoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8",
          "linkedWithoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8"
        },
        "inherit": [
          "contracts/base/BaseERC721_updated.sol:ICreatorToken",
          "contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721_updated.sol:51"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721_updated.sol:54"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721_updated.sol:57"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721_updated.sol:60"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721_updated.sol:63"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721_updated.sol:66"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721_updated.sol:69"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721_updated.sol:72"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:ICreatorToken": {
        "src": "contracts/base/BaseERC721_updated.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/BaseERC721_updated.sol:ITransferValidator": {
        "src": "contracts/base/BaseERC721_updated.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/TCG_World_Plots.sol:ICreatorToken": {
        "src": "contracts/base/TCG_World_Plots.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/TCG_World_Plots.sol:ITransferValidator": {
        "src": "contracts/base/TCG_World_Plots.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/TCG_World_Plots.sol:TCG_World_Plots": {
        "src": "contracts/base/TCG_World_Plots.sol:34",
        "version": {
          "withMetadata": "eb3967117ae954c150dc4b5c28e7914a4f7eddf0f70cafde08ca80f238bf0911",
          "withoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4",
          "linkedWithoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4"
        },
        "inherit": [
          "contracts/base/TCG_World_Plots.sol:ICreatorToken",
          "contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TCG_World_Plots",
              "src": "contracts/base/TCG_World_Plots.sol:52"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TCG_World_Plots",
              "src": "contracts/base/TCG_World_Plots.sol:55"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TCG_World_Plots",
              "src": "contracts/base/TCG_World_Plots.sol:58"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "TCG_World_Plots",
              "src": "contracts/base/TCG_World_Plots.sol:61"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots",
              "src": "contracts/base/TCG_World_Plots.sol:64"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots",
              "src": "contracts/base/TCG_World_Plots.sol:67"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "TCG_World_Plots",
              "src": "contracts/base/TCG_World_Plots.sol:70"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "TCG_World_Plots",
              "src": "contracts/base/TCG_World_Plots.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/TCG_World_Vehicles.sol:ICreatorToken": {
        "src": "contracts/base/TCG_World_Vehicles.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/TCG_World_Vehicles.sol:ITransferValidator": {
        "src": "contracts/base/TCG_World_Vehicles.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/TCG_World_Vehicles.sol:TCG_World_Vehicles": {
        "src": "contracts/base/TCG_World_Vehicles.sol:34",
        "version": {
          "withMetadata": "b110981c0e4360416c5c3f973d3682ef52c5be1d75a024d91c4a367bdefc084c",
          "withoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4",
          "linkedWithoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4"
        },
        "inherit": [
          "contracts/base/TCG_World_Vehicles.sol:ICreatorToken",
          "contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TCG_World_Vehicles",
              "src": "contracts/base/TCG_World_Vehicles.sol:52"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TCG_World_Vehicles",
              "src": "contracts/base/TCG_World_Vehicles.sol:55"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TCG_World_Vehicles",
              "src": "contracts/base/TCG_World_Vehicles.sol:58"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "TCG_World_Vehicles",
              "src": "contracts/base/TCG_World_Vehicles.sol:61"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Vehicles",
              "src": "contracts/base/TCG_World_Vehicles.sol:64"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Vehicles",
              "src": "contracts/base/TCG_World_Vehicles.sol:67"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "TCG_World_Vehicles",
              "src": "contracts/base/TCG_World_Vehicles.sol:70"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "TCG_World_Vehicles",
              "src": "contracts/base/TCG_World_Vehicles.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/events/BaseERC1155Events.sol:BaseERC1155Events": {
        "src": "contracts/base/events/BaseERC1155Events.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/events/BaseERC721Events.sol:BaseERC721Events": {
        "src": "contracts/base/events/BaseERC721Events.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/events/TreasuryManagerEvents.sol:TreasuryManagerEvents": {
        "src": "contracts/base/events/TreasuryManagerEvents.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/base/events/UnitTokenEvents.sol:UnitTokenEvents": {
        "src": "contracts/base/events/UnitTokenEvents.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "contracts/nfts/TCGPlot.sol:TCGPlot": {
        "src": "contracts/nfts/TCGPlot.sol:11",
        "version": {
          "withMetadata": "3366d1d061267b0873a897c38626364c18b48182bec81738b005ba05d0ccb62d",
          "withoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4",
          "linkedWithoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4"
        },
        "inherit": [
          "contracts/base/BaseERC721.sol:BaseERC721",
          "contracts/base/BaseERC721.sol:ICreatorToken",
          "contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:52"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:55"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:58"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:61"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:64"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:67"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:70"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "BaseERC721",
              "src": "contracts/base/BaseERC721.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      }
    },
    {
      "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:50",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:56",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings",
          "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:15",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:24",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:18",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:26",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981": {
        "src": "@openzeppelin/contracts/interfaces/IERC2981.sol:14",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "royaltyInfo(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906": {
        "src": "@openzeppelin/contracts/interfaces/IERC4906.sol:10",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:ERC721Utils": {
        "src": "@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol:16",
        "version": {
          "withMetadata": "9f238e3f03b11714ce701fa7083391084548184cc65479b2620430631424e44f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Panic.sol:Panic": {
        "src": "@openzeppelin/contracts/utils/Panic.sol:26",
        "version": {
          "withMetadata": "5d6470be24221fe4f6ff6cc4bf57a6592879560c97ae57443faf4957c5fc9641",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:13",
        "version": {
          "withMetadata": "da3d60c1e26e3fee1a19864ff256f7065159fe161bfe346968c58ec7d096002d",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:12",
        "version": {
          "withMetadata": "b3c18ed86839214afed7f068f81424edfcf2a5fd8583ddd6ab03ea973bbaba7c",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast",
          "@openzeppelin/contracts/utils/math/Math.sol:Math",
          "@openzeppelin/contracts/utils/Panic.sol:Panic"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast": {
        "src": "@openzeppelin/contracts/utils/math/SafeCast.sol:19",
        "version": {
          "withMetadata": "2372ecf7fe33ce370ae8228606096145b1a3e80a84242e53e470d3420a7466e9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:11",
        "version": {
          "withMetadata": "2026ace53092d425f1e39f7c344bee02f3f64517bdedbb0dfd9e19fc27268f50",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/SafeCast.sol:SafeCast"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/BaseERC721.sol:BaseERC721": {
        "src": "ignition/modules/contracts/base/BaseERC721.sol:34",
        "version": {
          "withMetadata": "a08694c0b3dd9a5217d35c6ecc3b6f3460fe860601c39673f1e42c10f4df2379",
          "withoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4",
          "linkedWithoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4"
        },
        "inherit": [
          "ignition/modules/contracts/base/BaseERC721.sol:ICreatorToken",
          "ignition/modules/contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:52"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:55"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:58"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:61"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:64"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:67"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:70"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/BaseERC721.sol:ICreatorToken": {
        "src": "ignition/modules/contracts/base/BaseERC721.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/BaseERC721.sol:ITransferValidator": {
        "src": "ignition/modules/contracts/base/BaseERC721.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/BaseERC721_updated.sol:BaseERC721": {
        "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:34",
        "version": {
          "withMetadata": "c4802af52592cdc5ea3be328a771b25bbe54e53aeb5a9badd6c1a10f9606ea87",
          "withoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8",
          "linkedWithoutMetadata": "4b795e7931ba84e1d2741ea6ceaceb78a3d68fdd3a3c2f0b8a12389f87b855f8"
        },
        "inherit": [
          "ignition/modules/contracts/base/BaseERC721_updated.sol:ICreatorToken",
          "ignition/modules/contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:51"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:54"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:57"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:60"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:63"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:66"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:69"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:72"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/BaseERC721_updated.sol:ICreatorToken": {
        "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/BaseERC721_updated.sol:ITransferValidator": {
        "src": "ignition/modules/contracts/base/BaseERC721_updated.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/TCG_World_Plots.sol:ICreatorToken": {
        "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/TCG_World_Plots.sol:ITransferValidator": {
        "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/TCG_World_Plots.sol:TCG_World_Plots": {
        "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:34",
        "version": {
          "withMetadata": "17e40d3c72b69b2b5bfd67ec3210cdaa1c7bcf514a7abf4dbcd39f37c9a8e818",
          "withoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4",
          "linkedWithoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4"
        },
        "inherit": [
          "ignition/modules/contracts/base/TCG_World_Plots.sol:ICreatorToken",
          "ignition/modules/contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TCG_World_Plots",
              "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:52"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TCG_World_Plots",
              "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:55"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TCG_World_Plots",
              "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:58"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "TCG_World_Plots",
              "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:61"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots",
              "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:64"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Plots",
              "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:67"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "TCG_World_Plots",
              "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:70"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "TCG_World_Plots",
              "src": "ignition/modules/contracts/base/TCG_World_Plots.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/TCG_World_Vehicles.sol:ICreatorToken": {
        "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:23",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/TCG_World_Vehicles.sol:ITransferValidator": {
        "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "validateTransfer(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/TCG_World_Vehicles.sol:TCG_World_Vehicles": {
        "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:34",
        "version": {
          "withMetadata": "b593b3283390e43a91deabce5552ff6182492d7403d1f283e3d26b2c72d3a781",
          "withoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4",
          "linkedWithoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4"
        },
        "inherit": [
          "ignition/modules/contracts/base/TCG_World_Vehicles.sol:ICreatorToken",
          "ignition/modules/contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "()",
          "initialize(address,address,address,address,address,string,string,uint64)",
          "getTransferValidator()",
          "getTransferValidationFunction()",
          "setTransferValidator(address)",
          "pause()",
          "unpause()",
          "updateBlockListStatus(address,bool)",
          "setBaseURI(string)",
          "isBlocklisted(address)",
          "isWhitelisted(address)",
          "isTokenRecentlyTransferred(uint256)",
          "updateWhitelist(address,bool)",
          "mint(address,uint256)",
          "bridgeMint(address,uint256,uint256)",
          "batchMint(address[],uint256[])",
          "migrate(address,uint256,uint256)",
          "batchMigrate(address[],uint256[],uint256[])",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "batchBurn(uint256[])",
          "batchBurnFrom(address,uint256[])",
          "safeOwnerOf(uint256)",
          "tokenURI(uint256)",
          "safeTransfer(address,uint256)",
          "safeBatchTransfer(address[],uint256[])",
          "supportsInterface(bytes4)",
          "isApprovedForAll(address,address)",
          "getTokenItemID(uint256)",
          "setRoyaltyInfo(address,uint96)",
          "setTokenRoyalty(uint256,address,uint96)",
          "resetTokenRoyalty(uint256)",
          "updateLockDuration(uint64)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "TCG_World_Vehicles",
              "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:52"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "TCG_World_Vehicles",
              "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:55"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TCG_World_Vehicles",
              "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:58"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "TCG_World_Vehicles",
              "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:61"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Vehicles",
              "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:64"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TCG_World_Vehicles",
              "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:67"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "TCG_World_Vehicles",
              "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:70"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "TCG_World_Vehicles",
              "src": "ignition/modules/contracts/base/TCG_World_Vehicles.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/events/BaseERC1155Events.sol:BaseERC1155Events": {
        "src": "ignition/modules/contracts/base/events/BaseERC1155Events.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/events/BaseERC721Events.sol:BaseERC721Events": {
        "src": "ignition/modules/contracts/base/events/BaseERC721Events.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/events/TreasuryManagerEvents.sol:TreasuryManagerEvents": {
        "src": "ignition/modules/contracts/base/events/TreasuryManagerEvents.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/base/events/UnitTokenEvents.sol:UnitTokenEvents": {
        "src": "ignition/modules/contracts/base/events/UnitTokenEvents.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.23"
      },
      "ignition/modules/contracts/nfts/TCGPlot.sol:TCGPlot": {
        "src": "ignition/modules/contracts/nfts/TCGPlot.sol:11",
        "version": {
          "withMetadata": "4d361373c2a9cf62e057e05c2027a34370f0e9bc51af99cfc91d0c7d46e7a2d7",
          "withoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4",
          "linkedWithoutMetadata": "8eaf86eac0a196950e626323a1f6dad445792be1e6a0df4366a5d46d86e47ea4"
        },
        "inherit": [
          "ignition/modules/contracts/base/BaseERC721.sol:BaseERC721",
          "ignition/modules/contracts/base/BaseERC721.sol:ICreatorToken",
          "ignition/modules/contracts/base/events/BaseERC721Events.sol:BaseERC721Events",
          "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:ERC2981Upgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:PausableUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:ERC721EnumerableUpgradeable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:ERC721URIStorageUpgradeable",
          "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:ERC721Upgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/interfaces/IERC4906.sol:IERC4906",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
          "@openzeppelin/contracts/interfaces/IERC2981.sol:IERC2981",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_transferValidator",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:52"
            },
            {
              "label": "tcgBaseURI",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:55"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:58"
            },
            {
              "label": "lockDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint64",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:61"
            },
            {
              "label": "_blocklist",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:64"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:67"
            },
            {
              "label": "_lastTransfer",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint64)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:70"
            },
            {
              "label": "_tokenItemID",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "BaseERC721",
              "src": "ignition/modules/contracts/base/BaseERC721.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
              "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)": {
              "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AccessControlStorage)34_storage": {
              "label": "struct AccessControlUpgradeable.AccessControlStorage",
              "members": [
                {
                  "label": "_roles",
                  "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ERC2981Storage)770_storage": {
              "label": "struct ERC2981Upgradeable.ERC2981Storage",
              "members": [
                {
                  "label": "_defaultRoyaltyInfo",
                  "type": "t_struct(RoyaltyInfo)760_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_tokenRoyaltyInfo",
                  "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(ERC721EnumerableStorage)561_storage": {
              "label": "struct ERC721EnumerableUpgradeable.ERC721EnumerableStorage",
              "members": [
                {
                  "label": "_ownedTokens",
                  "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_ownedTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_allTokens",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_allTokensIndex",
                  "type": "t_mapping(t_uint256,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(ERC721Storage)249_storage": {
              "label": "struct ERC721Upgradeable.ERC721Storage",
              "members": [
                {
                  "label": "_name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_symbol",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "_owners",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "_balances",
                  "type": "t_mapping(t_address,t_uint256)",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "_tokenApprovals",
                  "type": "t_mapping(t_uint256,t_address)",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "_operatorApprovals",
                  "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ERC721URIStorageStorage)695_storage": {
              "label": "struct ERC721URIStorageUpgradeable.ERC721URIStorageStorage",
              "members": [
                {
                  "label": "_tokenURIs",
                  "type": "t_mapping(t_uint256,t_string_storage)",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(InitializableStorage)145_storage": {
              "label": "struct Initializable.InitializableStorage",
              "members": [
                {
                  "label": "_initialized",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_initializing",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(PausableStorage)889_storage": {
              "label": "struct PausableUpgradeable.PausableStorage",
              "members": [
                {
                  "label": "_paused",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(ReentrancyGuardStorage)953_storage": {
              "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
              "members": [
                {
                  "label": "_status",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)24_storage": {
              "label": "struct AccessControlUpgradeable.RoleData",
              "members": [
                {
                  "label": "hasRole",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoyaltyInfo)760_storage": {
              "label": "struct ERC2981Upgradeable.RoyaltyInfo",
              "members": [
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "royaltyFraction",
                  "type": "t_uint96",
                  "offset": 20,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint96": {
              "label": "uint96",
              "numberOfBytes": "12"
            },
            "t_mapping(t_uint256,t_uint64)": {
              "label": "mapping(uint256 => uint64)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {
            "erc7201:openzeppelin.storage.ERC2981": [
              {
                "contract": "ERC2981Upgradeable",
                "label": "_defaultRoyaltyInfo",
                "type": "t_struct(RoyaltyInfo)760_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:32",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC2981Upgradeable",
                "label": "_tokenRoyaltyInfo",
                "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)760_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:33",
                "offset": 0,
                "slot": "1"
              }
            ],
            "erc7201:openzeppelin.storage.ReentrancyGuard": [
              {
                "contract": "ReentrancyGuardUpgradeable",
                "label": "_status",
                "type": "t_uint256",
                "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:43",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.AccessControl": [
              {
                "contract": "AccessControlUpgradeable",
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.Pausable": [
              {
                "contract": "PausableUpgradeable",
                "label": "_paused",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721Enumerable": [
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokens",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:21",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_ownedTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokens",
                "type": "t_array(t_uint256)dyn_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:24",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721EnumerableUpgradeable",
                "label": "_allTokensIndex",
                "type": "t_mapping(t_uint256,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25",
                "offset": 0,
                "slot": "3"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721URIStorage": [
              {
                "contract": "ERC721URIStorageUpgradeable",
                "label": "_tokenURIs",
                "type": "t_mapping(t_uint256,t_string_storage)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:25",
                "offset": 0,
                "slot": "0"
              }
            ],
            "erc7201:openzeppelin.storage.ERC721": [
              {
                "contract": "ERC721Upgradeable",
                "label": "_name",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_symbol",
                "type": "t_string_storage",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
                "offset": 0,
                "slot": "1"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
                "offset": 0,
                "slot": "2"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
                "offset": 0,
                "slot": "3"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
                "offset": 0,
                "slot": "4"
              },
              {
                "contract": "ERC721Upgradeable",
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
                "offset": 0,
                "slot": "5"
              }
            ],
            "erc7201:openzeppelin.storage.Initializable": [
              {
                "contract": "Initializable",
                "label": "_initialized",
                "type": "t_uint64",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
                "offset": 0,
                "slot": "0"
              },
              {
                "contract": "Initializable",
                "label": "_initializing",
                "type": "t_bool",
                "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
                "offset": 8,
                "slot": "0"
              }
            ]
          }
        },
        "solcVersion": "0.8.23"
      }
    }
  ]
}